{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport getEnv from \"./env\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useState, useEffect } from \"react\";\nimport { ResponseType, useAuthRequest, makeRedirectUri } from \"expo-auth-session\";\nimport { getMyTopTracks, getAlbumTracks } from \"./apiOptions\";\nimport * as WebBrowser from \"expo-web-browser\";\nvar _getEnv = getEnv(),\n  REDIRECT_URI = _getEnv.REDIRECT_URI,\n  SCOPES = _getEnv.SCOPES,\n  CLIENT_ID = _getEnv.CLIENT_ID,\n  ALBUM_ID = _getEnv.ALBUM_ID,\n  DISCOVERY = _getEnv.SPOTIFY_API.DISCOVERY;\n\nWebBrowser.maybeCompleteAuthSession();\nvar useSpotifyAuth = function useSpotifyAuth() {\n  var ALBUM_ONLY = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tracks = _useState4[0],\n    setTracks = _useState4[1];\n  var _useAuthRequest = useAuthRequest({\n      responseType: ResponseType.Token,\n      clientId: CLIENT_ID,\n      scopes: SCOPES,\n      usePKCE: false,\n      redirectUri: Platform.OS !== \"web\" ? REDIRECT_URI : makeRedirectUri({\n        preferLocalhost: true,\n        isTripleSlashed: true\n      })\n    }, DISCOVERY),\n    _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n    _ = _useAuthRequest2[0],\n    response = _useAuthRequest2[1],\n    promptAsync = _useAuthRequest2[2];\n  useEffect(function () {\n    if ((response == null ? void 0 : response.type) === \"success\") {\n      var access_token = response.params.access_token;\n      setToken(access_token);\n    }\n    if (Platform.OS === \"web\" && location.hash) setToken(location.hash.split(\"=\")[1]);\n  }, [response]);\n  useEffect(function () {\n    var fetchTracks = function fetchTracks() {\n      var res;\n      return _regeneratorRuntime.async(function fetchTracks$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = ALBUM_ONLY;\n              _context.next = _context.t0 === true ? 3 : 7;\n              break;\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getAlbumTracks(ALBUM_ID, token));\n            case 5:\n              res = _context.sent;\n              return _context.abrupt(\"break\", 11);\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(getMyTopTracks(token));\n            case 9:\n              res = _context.sent;\n              return _context.abrupt(\"break\", 11);\n            case 11:\n              setTracks(res);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n    if (token) {\n      fetchTracks();\n    }\n  }, [token]);\n  var setLoggedIn = function setLoggedIn() {\n    promptAsync(Platform.OS === \"web\" ? {\n      windowName: \"_self\"\n    } :\n    {});\n  };\n  return {\n    token: token != null ? token : undefined,\n    tracks: tracks,\n    getSpotifyAuth: setLoggedIn\n  };\n};\nexport default useSpotifyAuth;","map":{"version":3,"names":["getEnv","useState","useEffect","ResponseType","useAuthRequest","makeRedirectUri","getMyTopTracks","getAlbumTracks","WebBrowser","REDIRECT_URI","SCOPES","CLIENT_ID","ALBUM_ID","DISCOVERY","SPOTIFY_API","maybeCompleteAuthSession","useSpotifyAuth","ALBUM_ONLY","token","setToken","tracks","setTracks","responseType","Token","clientId","scopes","usePKCE","redirectUri","Platform","OS","preferLocalhost","isTripleSlashed","_","response","promptAsync","type","access_token","params","location","hash","split","fetchTracks","res","setLoggedIn","windowName","undefined","getSpotifyAuth"],"sources":["/Users/tomshahar/Documents/School/Autumn2022/CS47/Assignment3/assignment-3-spotify-starter-main/utils/useSpotifyAuth.js"],"sourcesContent":["import getEnv from \"./env\";\nimport { Platform } from \"react-native\";\nimport { useState, useEffect } from \"react\";\nimport {\n  ResponseType,\n  useAuthRequest,\n  makeRedirectUri,\n} from \"expo-auth-session\";\nimport { getMyTopTracks, getAlbumTracks } from \"./apiOptions\";\n\nimport * as WebBrowser from \"expo-web-browser\";\n\nconst {\n  REDIRECT_URI,\n  SCOPES,\n  CLIENT_ID,\n  ALBUM_ID,\n  SPOTIFY_API: { DISCOVERY },\n} = getEnv();\n\n// needed so that the browswer closes the modal after auth token\nWebBrowser.maybeCompleteAuthSession();\n\nconst useSpotifyAuth = (ALBUM_ONLY = false) => {\n  const [token, setToken] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const [_, response, promptAsync] = useAuthRequest(\n    {\n      responseType: ResponseType.Token,\n      clientId: CLIENT_ID,\n      scopes: SCOPES,\n      // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n      // this must be set to false\n      usePKCE: false,\n      redirectUri:\n        Platform.OS !== \"web\"\n          ? REDIRECT_URI\n          : makeRedirectUri({\n              // scheme: null, // optional for web, mobile default: 'exp'\n              preferLocalhost: true,\n              isTripleSlashed: true,\n              // useProxy: true, // not needed afaict, default: false\n            }),\n    },\n    DISCOVERY\n  );\n\n  useEffect(() => {\n    if (response?.type === \"success\") {\n      const { access_token } = response.params;\n      setToken(access_token);\n    }\n    if (Platform.OS === \"web\" && location.hash)\n      setToken(location.hash.split(\"=\")[1]);\n  }, [response]);\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      let res;\n      switch (ALBUM_ONLY) {\n        case true:\n          res = await getAlbumTracks(ALBUM_ID, token);\n          break;\n        default:\n          res = await getMyTopTracks(token);\n          break;\n      }\n      setTracks(res);\n    };\n\n    if (token) {\n      // Authenticated, make API request\n      fetchTracks();\n    }\n  }, [token]);\n\n  const setLoggedIn = () => {\n    promptAsync(\n      Platform.OS === \"web\"\n        ? { windowName: \"_self\" }\n        : /* this is for forcing the popup to be created within the same window so needs same context */\n          {}\n    );\n  };\n  // TO DO: pick better naming conventions\n  return { token: token ?? undefined, tracks, getSpotifyAuth: setLoggedIn };\n};\n\nexport default useSpotifyAuth;\n"],"mappings":";;AAAA,OAAOA,MAAM;AAAc;AAE3B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,YAAY,EACZC,cAAc,EACdC,eAAe,QACV,mBAAmB;AAC1B,SAASC,cAAc,EAAEC,cAAc;AAEvC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAE9C,cAMIR,MAAM,EAAE;EALVS,YAAY,WAAZA,YAAY;EACZC,MAAM,WAANA,MAAM;EACNC,SAAS,WAATA,SAAS;EACTC,QAAQ,WAARA,QAAQ;EACOC,SAAS,WAAxBC,WAAW,CAAID,SAAS;;AAI1BL,UAAU,CAACO,wBAAwB,EAAE;AAErC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAA2B;EAAA,IAAvBC,UAAU,uEAAG,KAAK;EACxC,gBAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BiB,KAAK;IAAEC,QAAQ;EACtB,iBAA4BlB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCmB,MAAM;IAAEC,SAAS;EACxB,sBAAmCjB,cAAc,CAC/C;MACEkB,YAAY,EAAEnB,YAAY,CAACoB,KAAK;MAChCC,QAAQ,EAAEb,SAAS;MACnBc,MAAM,EAAEf,MAAM;MAGdgB,OAAO,EAAE,KAAK;MACdC,WAAW,EACTC,QAAQ,CAACC,EAAE,KAAK,KAAK,GACjBpB,YAAY,GACZJ,eAAe,CAAC;QAEdyB,eAAe,EAAE,IAAI;QACrBC,eAAe,EAAE;MAEnB,CAAC;IACT,CAAC,EACDlB,SAAS,CACV;IAAA;IAnBMmB,CAAC;IAAEC,QAAQ;IAAEC,WAAW;EAqB/BhC,SAAS,CAAC,YAAM;IACd,IAAI,CAAA+B,QAAQ,oBAARA,QAAQ,CAAEE,IAAI,MAAK,SAAS,EAAE;MAChC,IAAQC,YAAY,GAAKH,QAAQ,CAACI,MAAM,CAAhCD,YAAY;MACpBjB,QAAQ,CAACiB,YAAY,CAAC;IACxB;IACA,IAAIR,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAIS,QAAQ,CAACC,IAAI,EACxCpB,QAAQ,CAACmB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd/B,SAAS,CAAC,YAAM;IACd,IAAMuC,WAAW,GAAG,SAAdA,WAAW;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,cAEPxB,UAAU;cAAA,gCACX,IAAI;cAAA;YAAA;cAAA;cAAA,iCACKV,cAAc,CAACK,QAAQ,EAAEM,KAAK,CAAC;YAAA;cAA3CwB,GAAG;cAAA;YAAA;cAAA;cAAA,iCAGSpC,cAAc,CAACY,KAAK,CAAC;YAAA;cAAjCwB,GAAG;cAAA;YAAA;cAGPrB,SAAS,CAACqB,GAAG,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAChB;IAED,IAAIxB,KAAK,EAAE;MAETuB,WAAW,EAAE;IACf;EACF,CAAC,EAAE,CAACvB,KAAK,CAAC,CAAC;EAEX,IAAMyB,WAAW,GAAG,SAAdA,WAAW,GAAS;IACxBT,WAAW,CACTN,QAAQ,CAACC,EAAE,KAAK,KAAK,GACjB;MAAEe,UAAU,EAAE;IAAQ,CAAC;IAEvB,CAAC,CAAC,CACP;EACH,CAAC;EAED,OAAO;IAAE1B,KAAK,EAAEA,KAAK,WAALA,KAAK,GAAI2B,SAAS;IAAEzB,MAAM,EAANA,MAAM;IAAE0B,cAAc,EAAEH;EAAY,CAAC;AAC3E,CAAC;AAED,eAAe3B,cAAc"},"metadata":{},"sourceType":"module"}