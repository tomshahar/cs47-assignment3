{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport CachedTopTracks from \"./topTracksCache.json\";\nimport CachedAlbumTracks from \"./albumTracksCache.json\";\nimport getEnv from \"./env\";\nvar _getEnv = getEnv(),\n  _getEnv$SPOTIFY_API = _getEnv.SPOTIFY_API,\n  SHORT_TERM_API = _getEnv$SPOTIFY_API.SHORT_TERM_API,\n  LONG_TERM_API = _getEnv$SPOTIFY_API.LONG_TERM_API,\n  ALBUM_TRACK_API_GETTER = _getEnv$SPOTIFY_API.ALBUM_TRACK_API_GETTER;\nvar NETWORK_FAILURE = new Error('Network failure.\\nCheck console for more details.\\nRandom cached data is returned.');\nvar fetcher = function fetcher(url, token) {\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios(url, {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n              Authorization: 'Bearer ' + token\n            }\n          }));\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var getMyTopTracks = function getMyTopTracks(token) {\n  var cache, _res$data, _res$data2, _res$data3, res;\n  return _regeneratorRuntime.async(function getMyTopTracks$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          cache = {\n            data: {\n              items: CachedTopTracks\n            }\n          };\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetcher(SHORT_TERM_API, token));\n        case 4:\n          res = _context2.sent;\n          if (!(!res || !((_res$data = res.data) != null && _res$data.items.length))) {\n            _context2.next = 9;\n            break;\n          }\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(fetcher(LONG_TERM_API, token));\n        case 8:\n          res = _context2.sent;\n        case 9:\n          if (!res || !((_res$data2 = res.data) != null && _res$data2.items.length)) res = cache;\n          return _context2.abrupt(\"return\", (_res$data3 = res.data) == null ? void 0 : _res$data3.items);\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(_context2.t0);\n          alert(NETWORK_FAILURE);\n          return _context2.abrupt(\"return\", cache);\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 13]], Promise);\n};\nexport var getAlbumTracks = function getAlbumTracks(albumId, token) {\n  var _res$data4, _res$data4$tracks, _res$data4$tracks$ite, res, transformedResponse;\n  return _regeneratorRuntime.async(function getAlbumTracks$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetcher(ALBUM_TRACK_API_GETTER(albumId), token));\n        case 3:\n          res = _context3.sent;\n          transformedResponse = (_res$data4 = res.data) == null ? void 0 : (_res$data4$tracks = _res$data4.tracks) == null ? void 0 : (_res$data4$tracks$ite = _res$data4$tracks.items) == null ? void 0 : _res$data4$tracks$ite.map(function (item) {\n            var _res$data5, _res$data6;\n            item.album = {\n              images: (_res$data5 = res.data) == null ? void 0 : _res$data5.images,\n              name: (_res$data6 = res.data) == null ? void 0 : _res$data6.name\n            };\n            return item;\n          });\n          if (transformedResponse) {\n            _context3.next = 7;\n            break;\n          }\n          return _context3.abrupt(\"return\", CachedAlbumTracks);\n        case 7:\n          return _context3.abrupt(\"return\", transformedResponse);\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          alert(NETWORK_FAILURE);\n          return _context3.abrupt(\"return\", CachedAlbumTracks);\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};","map":{"version":3,"names":["axios","CachedTopTracks","CachedAlbumTracks","getEnv","SPOTIFY_API","SHORT_TERM_API","LONG_TERM_API","ALBUM_TRACK_API_GETTER","NETWORK_FAILURE","Error","fetcher","url","token","method","headers","Accept","Authorization","console","log","getMyTopTracks","cache","data","items","res","length","error","alert","getAlbumTracks","albumId","transformedResponse","tracks","map","item","album","images","name"],"sources":["/Users/tomshahar/Documents/School/Autumn2022/CS47/Assignment3/assignment-3-spotify-starter-main/utils/apiOptions.js"],"sourcesContent":["import axios from 'axios';\nimport CachedTopTracks from './topTracksCache.json';\nimport CachedAlbumTracks from './albumTracksCache.json';\nimport getEnv from './env';\n\nconst {\n  SPOTIFY_API: { SHORT_TERM_API, LONG_TERM_API, ALBUM_TRACK_API_GETTER },\n} = getEnv();\n\nconst NETWORK_FAILURE = new Error(\n  'Network failure.\\nCheck console for more details.\\nRandom cached data is returned.'\n);\n\nconst fetcher = async (url, token) => {\n  try {\n    return await axios(url, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyTopTracks = async (token) => {\n  const cache = { data: { items: CachedTopTracks } };\n  try {\n    let res = await fetcher(SHORT_TERM_API, token);\n    if (!res || !res.data?.items.length) res = await fetcher(LONG_TERM_API, token);\n    if (!res || !res.data?.items.length) res = cache;\n    return res.data?.items;\n  } catch (e) {\n    console.error(e);\n    alert(NETWORK_FAILURE);\n    return cache;\n  }\n};\n\nexport const getAlbumTracks = async (albumId, token) => {\n  try {\n    const res = await fetcher(ALBUM_TRACK_API_GETTER(albumId), token);\n    const transformedResponse = res.data?.tracks?.items?.map((item) => {\n      item.album = { images: res.data?.images, name: res.data?.name };\n      return item;\n    });\n    if (!transformedResponse) return CachedAlbumTracks;\n    return transformedResponse;\n  } catch (e) {\n    console.error(e);\n    alert(NETWORK_FAILURE);\n    return CachedAlbumTracks;\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AACxB,OAAOC,MAAM;AAEb,cAEIA,MAAM,EAAE;EAAA,8BADVC,WAAW;EAAIC,cAAc,uBAAdA,cAAc;EAAEC,aAAa,uBAAbA,aAAa;EAAEC,sBAAsB,uBAAtBA,sBAAsB;AAGtE,IAAMC,eAAe,GAAG,IAAIC,KAAK,CAC/B,oFAAoF,CACrF;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAUC,GAAG,EAAEC,KAAK;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEhBZ,KAAK,CAACW,GAAG,EAAE;YACtBE,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACPC,MAAM,EAAE,kBAAkB;cAC1B,cAAc,EAAE,kBAAkB;cAClCC,aAAa,EAAE,SAAS,GAAGJ;YAC7B;UACF,CAAC,CAAC;QAAA;UAAA;QAAA;UAAA;UAAA;UAEFK,OAAO,CAACC,GAAG,aAAO;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAEtB;AAED,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAUP,KAAK;EAAA;EAAA;IAAA;MAAA;QAAA;UAClCQ,KAAK,GAAG;YAAEC,IAAI,EAAE;cAAEC,KAAK,EAAErB;YAAgB;UAAE,CAAC;UAAA;UAAA;UAAA,iCAEhCS,OAAO,CAACL,cAAc,EAAEO,KAAK,CAAC;QAAA;UAA1CW,GAAG;UAAA,MACH,CAACA,GAAG,IAAI,eAACA,GAAG,CAACF,IAAI,aAAR,UAAUC,KAAK,CAACE,MAAM;YAAA;YAAA;UAAA;UAAA;UAAA,iCAAcd,OAAO,CAACJ,aAAa,EAAEM,KAAK,CAAC;QAAA;UAAzCW,GAAG;QAAA;UACxC,IAAI,CAACA,GAAG,IAAI,gBAACA,GAAG,CAACF,IAAI,aAAR,WAAUC,KAAK,CAACE,MAAM,GAAED,GAAG,GAAGH,KAAK;UAAC,gDAC1CG,GAAG,CAACF,IAAI,qBAAR,WAAUC,KAAK;QAAA;UAAA;UAAA;UAEtBL,OAAO,CAACQ,KAAK,cAAG;UAChBC,KAAK,CAAClB,eAAe,CAAC;UAAC,kCAChBY,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAEf;AAED,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAc,CAAUC,OAAO,EAAEhB,KAAK;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAE7BF,OAAO,CAACH,sBAAsB,CAACqB,OAAO,CAAC,EAAEhB,KAAK,CAAC;QAAA;UAA3DW,GAAG;UACHM,mBAAmB,iBAAGN,GAAG,CAACF,IAAI,0CAAR,WAAUS,MAAM,8CAAhB,kBAAkBR,KAAK,qBAAvB,sBAAyBS,GAAG,CAAC,UAACC,IAAI,EAAK;YAAA;YACjEA,IAAI,CAACC,KAAK,GAAG;cAAEC,MAAM,gBAAEX,GAAG,CAACF,IAAI,qBAAR,WAAUa,MAAM;cAAEC,IAAI,gBAAEZ,GAAG,CAACF,IAAI,qBAAR,WAAUc;YAAK,CAAC;YAC/D,OAAOH,IAAI;UACb,CAAC,CAAC;UAAA,IACGH,mBAAmB;YAAA;YAAA;UAAA;UAAA,kCAAS3B,iBAAiB;QAAA;UAAA,kCAC3C2B,mBAAmB;QAAA;UAAA;UAAA;UAE1BZ,OAAO,CAACQ,KAAK,cAAG;UAChBC,KAAK,CAAClB,eAAe,CAAC;UAAC,kCAChBN,iBAAiB;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAE3B"},"metadata":{},"sourceType":"module"}