{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Themes } from \"../assets/Themes/index.js\";\nimport millisToMinutesAndSeconds from \"../utils/millisToMinutesAndSeconds.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Song(props) {\n  console.log(props.track);\n  return _jsxs(View, {\n    style: styles.songContainer,\n    children: [_jsx(View, {\n      style: styles.indexNumberWrapper,\n      children: _jsx(Text, {\n        style: styles.indexNumber,\n        children: props.track.key\n      })\n    }), _jsx(Image, {\n      source: {\n        uri: props.track.album.images[1].url\n      },\n      style: styles.albumImage\n    }), _jsxs(View, {\n      style: styles.nameContainer,\n      children: [_jsx(Text, {\n        style: styles.songTitle,\n        numberOfLines: 1,\n        children: props.track.name\n      }), _jsx(Text, {\n        style: styles.artistName,\n        numberOfLines: 1,\n        children: props.track.artists[0].name\n      })]\n    }), _jsx(Text, {\n      style: styles.albumName,\n      numberOfLines: 1,\n      children: props.track.album.name\n    }), _jsx(Text, {\n      style: styles.duration,\n      children: millisToMinutesAndSeconds(props.track.duration_ms)\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  songContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 4,\n    paddingLeft: 4,\n    paddingRight: 4,\n    color: 'white'\n  },\n  albumImage: {\n    width: 48,\n    height: 48\n  },\n  nameContainer: {\n    marginLeft: 8\n  },\n  songTitle: {\n    color: 'white',\n    fontSize: 12,\n    width: 125\n  },\n  artistName: {\n    color: 'rgba(255,255,255, 0.7)',\n    fontSize: 12,\n    width: '80%',\n    width: 125\n  },\n  indexNumber: {\n    color: 'rgba(255,255,255, 0.7)',\n    fontSize: 12\n  },\n  indexNumberWrapper: {\n    marginRight: 4,\n    width: 18,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  albumName: {\n    color: 'white',\n    margin: 8,\n    marginTop: 0,\n    marginBottom: 0,\n    fontSize: 12,\n    width: 100\n  },\n  duration: {\n    color: 'white',\n    fontSize: 12\n  },\n  songContainerLeft: {\n    flexDirection: 'row',\n    width: '60%'\n  },\n  songContainerRight: {\n    flexDirection: 'row',\n    width: '40%'\n  }\n});","map":{"version":3,"names":["React","Themes","millisToMinutesAndSeconds","Song","props","console","log","track","styles","songContainer","indexNumberWrapper","indexNumber","key","uri","album","images","url","albumImage","nameContainer","songTitle","name","artistName","artists","albumName","duration","duration_ms","StyleSheet","create","flexDirection","alignItems","padding","paddingLeft","paddingRight","color","width","height","marginLeft","fontSize","marginRight","justifyContent","margin","marginTop","marginBottom","songContainerLeft","songContainerRight"],"sources":["/Users/tomshahar/Documents/School/Autumn2022/CS47/Assignment3/assignment-3-spotify-starter-main/components/song.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Image } from 'react-native';\nimport { Themes } from '../assets/Themes/index.js';\nimport millisToMinutesAndSeconds from '../utils/millisToMinutesAndSeconds.js'\n\nexport default function Song(props) {\n    //PROPS\n    //index, album img, album title, song title, artist, duration\n    console.log(props.track)\n    return (\n        <View style={styles.songContainer}>\n                <View style={styles.indexNumberWrapper}>\n                    <Text style={styles.indexNumber}>\n                        {props.track.key}\n                    </Text>\n                </View>\n                <Image \n                    source={{uri: props.track.album.images[1].url}}\n                    style={styles.albumImage}\n                />\n                <View style={styles.nameContainer}>\n                    <Text style={styles.songTitle} numberOfLines={1}>\n                        {props.track.name}\n                    </Text>\n                    <Text style={styles.artistName} numberOfLines={1}>\n                        {props.track.artists[0].name}\n                    </Text>\n                </View>\n                <Text style={styles.albumName} numberOfLines={1}>\n                    {props.track.album.name}\n                </Text>\n                <Text style={styles.duration}>\n                    {millisToMinutesAndSeconds(props.track.duration_ms)}\n                </Text>\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n  songContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 4,\n    paddingLeft: 4,\n    paddingRight: 4,\n    color: 'white',\n  },\n  albumImage: {\n    width: 48,\n    height: 48,\n  },\n  nameContainer: {\n    marginLeft: 8,\n  },\n  songTitle: {\n    color: 'white',\n    fontSize: 12,\n    width: 125,\n  },\n  artistName: {\n    color: 'rgba(255,255,255, 0.7)',\n    fontSize: 12,\n    width: '80%',\n    width: 125,\n  },\n  indexNumber: {\n    color: 'rgba(255,255,255, 0.7)',\n    fontSize: 12,\n  },\n  indexNumberWrapper: {\n    marginRight: 4,\n    width: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  albumName: {\n    color: 'white',\n    margin: 8,\n    marginTop: 0,\n    marginBottom: 0,\n    fontSize: 12,\n    width: 100,\n\n  },\n  duration: {\n    color: 'white',\n    fontSize: 12,\n  },\n  songContainerLeft: {\n    flexDirection: 'row',\n    width: '60%',\n  },\n  songContainerRight: {\n    flexDirection: 'row',\n    width: '40%',\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}